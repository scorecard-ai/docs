openapi: 3.1.0
info:
  title: Scorecard API
  description: REST API for Scorecard
  version: 1.0.0
servers:
  - url: https://api2.scorecard.io/v2
security:
  - bearerAuth: []
paths:
  /projects:
    get:
      operationId: listProjects
      summary: Returns a list of projects.
      description:
        Retrieve a paginated list of all projects. Projects are ordered by
        creation date, with oldest projects first.
      parameters:
        - in: query
          name: limit
          description:
            Maximum number of items to return (1-100). Use with `cursor` for
            pagination through large sets.
          schema:
            type: integer
            exclusiveMinimum: 0
            default: 20
            example: 20
        - in: query
          name: cursor
          description:
            Cursor for pagination. Pass the `nextCursor` from the previous
            response to get the next page of results.
          schema:
            type: string
            example: 123
      responses:
        "200":
          description: Successfully retrieved list of projects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: The ID of the project
                        name:
                          type:
                            - string
                            - "null"
                          description: The name of the project
                      required:
                        - id
                        - name
                      description: A project in the Scorecard system.
                  nextCursor:
                    type:
                      - string
                      - "null"
                  hasMore:
                    type: boolean
                  total:
                    type: integer
                    minimum: 0
                required:
                  - data
                  - nextCursor
                  - hasMore
              example:
                data:
                  - id: 123
                    name: Q&A Chatbot
                    description: Chatbot for answering questions about the company.
                  - id: 124
                    name: Summarizer (Europe)
                    description: Summarizer for documents in the Europe region.
                nextCursor: "125"
                hasMore: true
        "401":
          $ref: "#/components/responses/UnauthenticatedError"
        "500":
          $ref: "#/components/responses/ServiceError"
  /projects/{projectId}/testsets:
    get:
      operationId: listTestsets
      summary: Retrieve a paginated list of testsets belonging to a project.
      parameters:
        - in: path
          name: projectId
          description: The ID of the project
          schema:
            type: integer
            format: int64
          required: true
        - in: query
          name: limit
          description:
            Maximum number of items to return (1-100). Use with `cursor` for
            pagination through large sets.
          schema:
            type: integer
            exclusiveMinimum: 0
            default: 20
            example: 20
        - in: query
          name: cursor
          description:
            Cursor for pagination. Pass the `nextCursor` from the previous
            response to get the next page of results.
          schema:
            type: string
            example: 123
      responses:
        "200":
          description: Successfully retrieved list of testsets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: The ID of the testset
                        name:
                          type: string
                          description: The name of the testset
                        description:
                          type: string
                          description: The description of the testset
                        schema:
                          type: object
                          description: The JSON schema for each testcase in the testset
                        fieldMapping:
                          type: object
                          properties:
                            inputs:
                              type: array
                              items:
                                type: string
                              description: Fields that represent inputs to the AI system
                            labels:
                              type: array
                              items:
                                type: string
                              description: Fields that represent expected outputs/labels
                            metadata:
                              type: array
                              items:
                                type: string
                              description: Fields that are not inputs or labels
                          required:
                            - inputs
                            - labels
                            - metadata
                          description:
                            Maps top-level keys of the testcase schema to their roles
                            (input/label). Unmapped fields are treated as
                            metadata.
                      required:
                        - id
                        - name
                        - description
                        - schema
                        - fieldMapping
                      description: >-
                        A collection of test cases that share the same schema.

                        Each testset defines the structure of its test cases
                        through a JSON schema.

                        The `fieldMappings` object maps top-level keys of the
                        testcase schema to their roles (input/label). Fields not
                        mentioned in the `fieldMappings` during creation or
                        update are treated as metadata.
                  nextCursor:
                    type:
                      - string
                      - "null"
                  hasMore:
                    type: boolean
                  total:
                    type: integer
                    minimum: 0
                required:
                  - data
                  - nextCursor
                  - hasMore
              example:
                data:
                  - id: 123
                    name: Long Context Q&A
                    description: Testset for long context Q&A chatbot.
                    schema:
                      type: object
                      properties:
                        question:
                          type: string
                        idealAnswer:
                          type: string
                        provenance:
                          type: string
                        geo:
                          type: string
                    fieldMapping:
                      inputs:
                        - question
                      labels:
                        - idealAnswer
                      metadata:
                        - provenance
                        - geo
                nextCursor: "125"
                hasMore: true
        "401":
          $ref: "#/components/responses/UnauthenticatedError"
        "500":
          $ref: "#/components/responses/ServiceError"
    post:
      operationId: createTestset
      summary: Create a new testset
      description:
        Create a new testset for a project. The testset will be created in
        the project specified in the path.
      parameters:
        - in: path
          name: projectId
          description: The ID of the project to create the testset in
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the testset
                description:
                  type: string
                  description: The description of the testset
                schema:
                  type: object
                  description: The JSON schema for each testcase in the testset
                fieldMapping:
                  type: object
                  properties:
                    inputs:
                      type: array
                      items:
                        type: string
                      description: Fields that represent inputs to the AI system
                    labels:
                      type: array
                      items:
                        type: string
                      description: Fields that represent expected outputs/labels
                    metadata:
                      type: array
                      items:
                        type: string
                      description: Fields that are not inputs or labels
                  required:
                    - inputs
                    - labels
                    - metadata
                  description:
                    Maps top-level keys of the testcase schema to their roles
                    (input/label). Unmapped fields are treated as metadata.
              required:
                - name
                - description
                - schema
                - fieldMapping
            example:
              name: Long Context Q&A
              description: Testset for long context Q&A chatbot.
              schema:
                type: object
                properties:
                  question:
                    type: string
                  idealAnswer:
                    type: string
                  provenance:
                    type: string
                  geo:
                    type: string
                fieldMapping:
                  inputs:
                    - question
                  labels:
                    - idealAnswer
                  metadata: []
      responses:
        "201":
          description: Testset created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: The ID of the testset
                  name:
                    type: string
                    description: The name of the testset
                  description:
                    type: string
                    description: The description of the testset
                  schema:
                    type: object
                    description: The JSON schema for each testcase in the testset
                  fieldMapping:
                    type: object
                    properties:
                      inputs:
                        type: array
                        items:
                          type: string
                        description: Fields that represent inputs to the AI system
                      labels:
                        type: array
                        items:
                          type: string
                        description: Fields that represent expected outputs/labels
                      metadata:
                        type: array
                        items:
                          type: string
                        description: Fields that are not inputs or labels
                    required:
                      - inputs
                      - labels
                      - metadata
                    description:
                      Maps top-level keys of the testcase schema to their roles
                      (input/label). Unmapped fields are treated as metadata.
                required:
                  - id
                  - name
                  - description
                  - schema
                  - fieldMapping
              example:
                id: 123
                name: Long Context Q&A
                description: Testset for long context Q&A chatbot.
                schema:
                  type: object
                  properties:
                    question:
                      type: string
                    idealAnswer:
                      type: string
                    provenance:
                      type: string
                    geo:
                      type: string
                  fieldMapping:
                    inputs:
                      - question
                    labels:
                      - idealAnswer
                    metadata:
                      - provenance
                      - geo
        "401":
          $ref: "#/components/responses/UnauthenticatedError"
        "500":
          $ref: "#/components/responses/ServiceError"
  /testsets/{testsetId}:
    get:
      operationId: getTestset
      summary: Get a testset by ID
      parameters:
        - in: path
          name: testsetId
          description: The ID of the testset
          schema:
            type: integer
            format: int64
          required: true
      responses:
        "200":
          description: Successfully retrieved testset
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: The ID of the testset
                  name:
                    type: string
                    description: The name of the testset
                  description:
                    type: string
                    description: The description of the testset
                  schema:
                    type: object
                    description: The JSON schema for each testcase in the testset
                  fieldMapping:
                    type: object
                    properties:
                      inputs:
                        type: array
                        items:
                          type: string
                        description: Fields that represent inputs to the AI system
                      labels:
                        type: array
                        items:
                          type: string
                        description: Fields that represent expected outputs/labels
                      metadata:
                        type: array
                        items:
                          type: string
                        description: Fields that are not inputs or labels
                    required:
                      - inputs
                      - labels
                      - metadata
                    description:
                      Maps top-level keys of the testcase schema to their roles
                      (input/label). Unmapped fields are treated as metadata.
                required:
                  - id
                  - name
                  - description
                  - schema
                  - fieldMapping
              example:
                id: 123
                name: Long Context Q&A
                description: Testset for long context Q&A chatbot.
                schema:
                  type: object
                  properties:
                    question:
                      type: string
                    idealAnswer:
                      type: string
                    provenance:
                      type: string
                    geo:
                      type: string
                fieldMapping:
                  inputs:
                    - question
                  labels:
                    - idealAnswer
                  metadata:
                    - provenance
                    - geo
        "401":
          $ref: "#/components/responses/UnauthenticatedError"
        "500":
          $ref: "#/components/responses/ServiceError"
    patch:
      operationId: updateTestset
      summary: Update a testset
      description: >-
        Update a testset. Only the fields provided in the request body will be
        updated.

        If a field is provided, the new content will replace the existing
        content.

        If a field is not provided, the existing content will remain unchanged.


        When updating the schema:

        - If field mappings are not provided and existing mappings reference
        fields that no longer exist, those mappings will be automatically
        removed

        - To preserve all existing mappings, ensure all referenced fields remain
        in the updated schema

        - For complete control, provide both schema and fieldMapping when
        updating the schema
      parameters:
        - in: path
          name: testsetId
          description: The ID of the testset to update
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the testset
                description:
                  type: string
                  description: The description of the testset
                schema:
                  type: object
                  description: The JSON schema for each testcase in the testset
                fieldMapping:
                  type: object
                  properties:
                    inputs:
                      type: array
                      items:
                        type: string
                      description: Fields that represent inputs to the AI system
                    labels:
                      type: array
                      items:
                        type: string
                      description: Fields that represent expected outputs/labels
                    metadata:
                      type: array
                      items:
                        type: string
                      description: Fields that are not inputs or labels
                  required:
                    - inputs
                    - labels
                    - metadata
                  description:
                    Maps top-level keys of the testcase schema to their roles
                    (input/label). Unmapped fields are treated as metadata.
              required:
                - name
                - description
                - schema
                - fieldMapping
            examples:
              Basic update:
                value:
                  name: Updated Q&A Testset
                  description: Updated description for the Q&A testset.
                summary: Simple metadata update without changing schema or mappings
              Field pruning example:
                value:
                  schema:
                    type: object
                    properties:
                      question:
                        type: string
                      idealAnswer:
                        type: string
                      provenance:
                        type: string
                summary: Removing a field from schema without updating field mappings
                description:
                  This request removes the 'geo' field that existed in the original
                  schema, but doesn't explicitly update the field mappings.
              Complete schema update:
                value:
                  schema:
                    type: object
                    properties:
                      question:
                        type: string
                      idealAnswer:
                        type: string
                      provenance:
                        type: string
                  fieldMapping:
                    inputs:
                      - question
                    labels:
                      - idealAnswer
                    metadata: []
                summary: Explicit schema and field mapping update
      responses:
        "200":
          description: Testset updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: The ID of the testset
                  name:
                    type: string
                    description: The name of the testset
                  description:
                    type: string
                    description: The description of the testset
                  schema:
                    type: object
                    description: The JSON schema for each testcase in the testset
                  fieldMapping:
                    type: object
                    properties:
                      inputs:
                        type: array
                        items:
                          type: string
                        description: Fields that represent inputs to the AI system
                      labels:
                        type: array
                        items:
                          type: string
                        description: Fields that represent expected outputs/labels
                      metadata:
                        type: array
                        items:
                          type: string
                        description: Fields that are not inputs or labels
                    required:
                      - inputs
                      - labels
                      - metadata
                    description:
                      Maps top-level keys of the testcase schema to their roles
                      (input/label). Unmapped fields are treated as metadata.
                required:
                  - id
                  - name
                  - description
                  - schema
                  - fieldMapping
              examples:
                Basic update result:
                  value:
                    id: 123
                    name: Updated Q&A Testset
                    description: Updated description for the Q&A testset.
                    schema:
                      type: object
                      properties:
                        question:
                          type: string
                        idealAnswer:
                          type: string
                        provenance:
                          type: string
                        geo:
                          type: string
                    fieldMapping:
                      inputs:
                        - question
                      labels:
                        - idealAnswer
                      metadata:
                        - provenance
                        - geo
                  summary: Result after updating only metadata fields
                Field pruning result:
                  value:
                    id: 123
                    name: Long Context Q&A
                    description: Testset for long context Q&A chatbot.
                    schema:
                      type: object
                      properties:
                        question:
                          type: string
                        idealAnswer:
                          type: string
                        provenance:
                          type: string
                    fieldMapping:
                      inputs:
                        - question
                      labels:
                        - idealAnswer
                      metadata:
                        - provenance
                  summary: Result after automatic field mapping cleanup
                  description:
                    Notice the 'geo' field has been automatically removed from the
                    metadata mapping since it no longer exists in the schema.
                Complete schema update result:
                  value:
                    id: 123
                    name: Long Context Q&A
                    description: Testset for long context Q&A chatbot.
                    schema:
                      type: object
                      properties:
                        question:
                          type: string
                        idealAnswer:
                          type: string
                        provenance:
                          type: string
                    fieldMapping:
                      inputs:
                        - question
                      labels:
                        - idealAnswer
                      metadata:
                        - provenance
                  summary:
                    Result after explicit schema and field mapping update. The 'provenance'
                    is interpreted to be a metadata field since it wasn't in the
                    field mapping in the request.
        "401":
          $ref: "#/components/responses/UnauthenticatedError"
        "500":
          $ref: "#/components/responses/ServiceError"
    delete:
      operationId: deleteTestset
      summary: Delete a testset
      parameters:
        - in: path
          name: testsetId
          description: The ID of the testset to delete
          schema:
            type: integer
            format: int64
          required: true
      responses:
        "200":
          description: Testset deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the deletion was successful
                required:
                  - success
        "401":
          $ref: "#/components/responses/UnauthenticatedError"
        "500":
          $ref: "#/components/responses/ServiceError"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: {}
      required:
        - code
        - message
        - details
      description: An API error
  responses:
    UnauthenticatedError:
      description: Error indicating that the request is not authenticated.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
          example:
            code: UNAUTHORIZED
            message: Invalid or missing authentication token
    ServiceError:
      description: An internal service error indicating an issue with the Scorecard service.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
          example:
            code: INTERNAL_ERROR
            message: An unexpected error occurred while processing your request.
