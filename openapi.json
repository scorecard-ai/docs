{
    "openapi": "3.1.0",
    "info": {
      "title": "ScoreCard AI API",
      "description": "Provides an API for logging testcases and running testsets against a model.",
      "contact": {
        "name": "Scorecard Team",
        "email": "team@getscorecard.ai",
        "url": "https://www.getscorecard.ai"
      },
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      },
      "version": "1.0.0"
    },
    "paths": {
      "/v1/": {
        "get": {
          "tags": [
            "v1"
          ],
          "summary": "Root",
          "description": "Root endpoint that returns a welcome message.",
          "operationId": "root_v1__get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/testset/{testset_id}": {
        "get": {
          "tags": [
            "v1",
            "testset"
          ],
          "summary": "Read Testset",
          "description": "Retrieve Testset metadata without Testcase data",
          "operationId": "read_testset_v1_testset__testset_id__get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset to retrieve.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset to retrieve."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Testset"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testset",
          "x-fern-sdk-method-name": "get"
        },
        "delete": {
          "tags": [
            "v1",
            "testset"
          ],
          "summary": "Delete",
          "description": "Delete a Testset",
          "operationId": "delete_v1_testset__testset_id__delete",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset to delete.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset to delete."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Testset"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "v1",
            "testset"
          ],
          "summary": "Update Testset",
          "description": "Update a Testset.",
          "operationId": "update_testset_v1_testset__testset_id__patch",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset to update.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset to update."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetUpdateParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Testset"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testset",
          "x-fern-sdk-method-name": "update"
        }
      },
      "/v1/testset": {
        "post": {
          "tags": [
            "v1",
            "testset"
          ],
          "summary": "Create Testset",
          "description": "Create a new Testset",
          "operationId": "create_testset_v1_testset_post",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetCreateParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Testset"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testset",
          "x-fern-sdk-method-name": "create"
        },
        "get": {
          "tags": [
            "v1",
            "testset"
          ],
          "summary": "List Testsets",
          "description": "Retrieve all Testsets with cursor-based pagination",
          "operationId": "list_testsets_v1_testset_get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "cursor",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Cursor"
              }
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 0,
                "default": 50,
                "title": "Size"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TestsetCursorPage"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testset",
          "x-fern-sdk-method-name": "get"
        }
      },
      "/v1/testset/{testset_id}/schema": {
        "get": {
          "tags": [
            "v1",
            "testset"
          ],
          "summary": "Read Testset Schema",
          "description": "Read the schema of a Testset",
          "operationId": "read_testset_schema_v1_testset__testset_id__schema_get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset to retrieve the schema from.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset to retrieve the schema from."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomSchema-Output"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testset",
          "x-fern-sdk-method-name": "read_schema"
        }
      },
      "/v1/testset/{testset_id}/testcase": {
        "get": {
          "tags": [
            "v1",
            "testcase"
          ],
          "summary": "Read Testcases",
          "description": "Retrieve all Testcases from a Testset",
          "operationId": "read_testcases_v1_testset__testset_id__testcase_get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The Testset ID to retrieve testcases from.",
                "examples": [1],
                "title": "Testset Id"
              },
              "description": "The Testset ID to retrieve testcases from."
            },
            {
              "name": "offset",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "description": "The offset to start from.",
                "examples": [0],
                "default": 0,
                "title": "Offset"
              },
              "description": "The offset to start from."
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "description": "The number of testcases to return.",
                "examples": [100],
                "default": 100,
                "title": "Limit"
              },
              "description": "The number of testcases to return."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedTestcaseResponse"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testset",
          "x-fern-sdk-method-name": "get_testcases"
        },
        "post": {
          "tags": [
            "v1",
            "testcase"
          ],
          "summary": "Create Testcase",
          "description": "Create a new Testcase",
          "operationId": "create_testcase_v1_testset__testset_id__testcase_post",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset to create the Testcase in.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset to create the Testcase in."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestcaseCreateParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TestCase"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testcase",
          "x-fern-sdk-method-name": "create"
        }
      },
      "/v1/testset/{testset_id}/testcase/{testcase_id}": {
        "get": {
          "tags": [
            "v1",
            "testcase"
          ],
          "summary": "Read Testcase",
          "description": "Retrieve Testcase data",
          "operationId": "read_testcase_v1_testset__testset_id__testcase__testcase_id__get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testcase_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testcase to retrieve.",
                "examples": [100],
                "title": "Testcase Id"
              },
              "description": "The ID of the Testcase to retrieve."
            },
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset to retrieve the Testcase from.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset to retrieve the Testcase from."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TestCase"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testcase",
          "x-fern-sdk-method-name": "get"
        },
        "delete": {
          "tags": [
            "v1",
            "testcase"
          ],
          "summary": "Delete Testcase",
          "description": "Delete a Testcase",
          "operationId": "delete_testcase_v1_testset__testset_id__testcase__testcase_id__delete",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testcase_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testcase to delete.",
                "examples": [100],
                "title": "Testcase Id"
              },
              "description": "The ID of the Testcase to delete."
            },
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset to delete the Testcase from.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset to delete the Testcase from."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TestcaseDeletionResponse"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "v1",
            "testcase"
          ],
          "summary": "Update Testcase",
          "description": "Update a Testcase.",
          "operationId": "update_testcase_v1_testset__testset_id__testcase__testcase_id__patch",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testcase_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testcase to update.",
                "examples": [123],
                "title": "Testcase Id"
              },
              "description": "The ID of the Testcase to update."
            },
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset to retrieve the Testcase from.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset to retrieve the Testcase from."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestcaseUpdateParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TestCase"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testcase",
          "x-fern-sdk-method-name": "update"
        }
      },
      "/v1/testset/{testset_id}/testcase/batch_copy": {
        "post": {
          "tags": [
            "v1",
            "testcase"
          ],
          "summary": "Batch Copy Testcases",
          "description": "Batch copy Testcases",
          "operationId": "batch_copy_testcases_v1_testset__testset_id__testcase_batch_copy_post",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset to create the Testcase in.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset to create the Testcase in."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestcaseBatchCopyParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TestCase"
                    },
                    "title": "Response Batch Copy Testcases V1 Testset  Testset Id  Testcase Batch Copy Post"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testcase",
          "x-fern-sdk-method-name": "batch_copy"
        }
      },
      "/v1/testset/{testset_id}/testcase/batch_delete": {
        "patch": {
          "tags": [
            "v1",
            "testcase"
          ],
          "summary": "Batch Delete Testcases",
          "description": "Batch delete Testcases",
          "operationId": "batch_delete_testcases_v1_testset__testset_id__testcase_batch_delete_patch",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testset_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Testset from which the Testcases will be deleted.",
                "examples": [123],
                "title": "Testset Id"
              },
              "description": "The ID of the Testset from which the Testcases will be deleted."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestcaseBatchDeleteParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TestcaseBatchDeletionResponse"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testcase",
          "x-fern-sdk-method-name": "batch_delete"
        }
      },
      "/v1/run/{run_id}/testrecord/{testrecord_id}": {
        "get": {
          "tags": [
            "v1",
            "testrecord"
          ],
          "summary": "Read Testrecord",
          "description": "Retrieve Testrecord metadata",
          "operationId": "read_testrecord_v1_run__run_id__testrecord__testrecord_id__get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "testrecord_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "title": "Testrecord Id"
              },
              "examples": {
                "dummy_testrecord_id": {
                  "value": 1
                }
              }
            },
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "title": "Run Id"
              },
              "examples": {
                "dummy_run_id": {
                  "value": 1
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Testrecord"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testrecord",
          "x-fern-sdk-method-name": "get"
        }
      },
      "/v1/run/{run_id}/testrecord": {
        "post": {
          "tags": [
            "v1",
            "testrecord"
          ],
          "summary": "Create Testrecord",
          "description": "Create a new Testrecord",
          "operationId": "create_testrecord_v1_run__run_id__testrecord_post",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the Run to create the Testrecord in.",
                "examples": [123],
                "title": "Run Id"
              },
              "description": "The ID of the Run to create the Testrecord in."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestrecordCreateParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Testrecord"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "testrecord",
          "x-fern-sdk-method-name": "create"
        }
      },
      "/v1/run": {
        "post": {
          "tags": [
            "v1",
            "run"
          ],
          "summary": "Create Run",
          "description": "Create a new Run",
          "operationId": "create_run_v1_run_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunCreateParams"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Run"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "x-fern-sdk-group-name": "run",
          "x-fern-sdk-method-name": "create"
        }
      },
      "/v1/run/{run_id}": {
        "get": {
          "tags": [
            "v1",
            "run"
          ],
          "summary": "Read Run",
          "description": "Retrieve a Run metadata",
          "operationId": "read_run_v1_run__run_id__get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The id of the run to retrieve.",
                "examples": [310],
                "title": "Run Id"
              },
              "description": "The id of the run to retrieve.",
              "examples": {
                "run_id": {
                  "value": 310,
                  "summary": "Example run id."
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Run"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "run",
          "x-fern-sdk-method-name": "get"
        }
      },
      "/v1/run/{run_id}/status": {
        "patch": {
          "tags": [
            "v1",
            "run"
          ],
          "summary": "Update Run Status",
          "description": "Update the status of a run.",
          "operationId": "update_run_status_v1_run__run_id__status_patch",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The id of the run to update.",
                "examples": [310],
                "title": "Run Id"
              },
              "description": "The id of the run to update.",
              "examples": {
                "run_id": {
                  "value": 310,
                  "summary": "Example run id."
                }
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateStatusParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Run"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "run",
          "x-fern-sdk-method-name": "update_status"
        }
      },
      "/v1/run/{run_id}/testrecord/{testrecord_id}/score": {
        "post": {
          "tags": [
            "v1",
            "score"
          ],
          "summary": "Create Score",
          "description": "Create a score",
          "operationId": "create_score_v1_run__run_id__testrecord__testrecord_id__score_post",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the run that created the testrecord to be scored.",
                "examples": [1],
                "title": "Run Id"
              },
              "description": "The ID of the run that created the testrecord to be scored."
            },
            {
              "name": "testrecord_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the testrecord to be scored.",
                "examples": [12],
                "title": "Testrecord Id"
              },
              "description": "The ID of the testrecord to be scored."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoreCreateParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Grade"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "score",
          "x-fern-sdk-method-name": "create"
        }
      },
      "/v1/run/{run_id}/testrecord/{testrecord_id}/score/{score_id}": {
        "patch": {
          "tags": [
            "v1",
            "score"
          ],
          "summary": "Update Score",
          "description": "Update a score",
          "operationId": "update_score_v1_run__run_id__testrecord__testrecord_id__score__score_id__patch",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The run ID that created the test record to be scored.",
                "examples": [1],
                "title": "Run Id"
              },
              "description": "The run ID that created the test record to be scored."
            },
            {
              "name": "testrecord_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the testrecord whose score will be updated.",
                "examples": [12],
                "title": "Testrecord Id"
              },
              "description": "The ID of the testrecord whose score will be updated."
            },
            {
              "name": "score_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The ID of the score to be updated.",
                "examples": [123],
                "title": "Score Id"
              },
              "description": "The ID of the score to be updated."
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoreUpdateParams"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Grade"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "score",
          "x-fern-sdk-method-name": "update"
        }
      },
      "/v1/run_metric/{run_id}": {
        "get": {
          "tags": [
            "v1",
            "run_metric"
          ],
          "summary": "Read Run Metrics",
          "description": "Retrieve metrics associated with a run",
          "operationId": "read_run_metrics_v1_run_metric__run_id__get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "description": "The id of the run to retrieve.",
                "examples": [310],
                "title": "Run Id"
              },
              "description": "The id of the run to retrieve."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RunMetric"
                    },
                    "title": "Response Read Run Metrics V1 Run Metric  Run Id  Get"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "run_metric",
          "x-fern-sdk-method-name": "get"
        }
      },
      "/v1/traces": {
        "get": {
          "tags": [
            "v1",
            "traces"
          ],
          "summary": "Get Traces",
          "description": "Retrieve traces",
          "operationId": "get_traces_v1_traces_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Trace"
                    },
                    "type": "array",
                    "title": "Response Get Traces V1 Traces Get"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "x-fern-sdk-group-name": "tracing",
          "x-fern-sdk-method-name": "traces"
        }
      },
      "/v1/traces/{trace_id}": {
        "get": {
          "tags": [
            "v1",
            "traces"
          ],
          "summary": "Get Trace",
          "description": "Retrieve specified trace",
          "operationId": "get_trace_v1_traces__trace_id__get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "trace_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The ID of the trace to retrieve spans from.",
                "examples": [
                  "8e45b6060adab3fb460c3a0ca65f5046"
                ],
                "title": "Trace Id"
              },
              "description": "The ID of the trace to retrieve spans from.",
              "examples": {
                "trace_id": {
                  "value": "8e45b6060adab3fb460c3a0ca65f5046",
                  "summary": "The ID of the trace to retrieve spans from."
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Trace"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "tracing",
          "x-fern-sdk-method-name": "trace"
        }
      },
      "/v1/traces/{trace_id}/spans/{span_id}": {
        "get": {
          "tags": [
            "v1",
            "traces"
          ],
          "summary": "Get Trace Span",
          "description": "Retrieve specified span",
          "operationId": "get_trace_span_v1_traces__trace_id__spans__span_id__get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "trace_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The ID of the trace which the span is a part of.",
                "examples": [
                  "8e45b6060adab3fb460c3a0ca65f5046"
                ],
                "title": "Trace Id"
              },
              "description": "The ID of the trace which the span is a part of.",
              "examples": {
                "trace_id": {
                  "value": "8e45b6060adab3fb460c3a0ca65f5046",
                  "summary": "The ID of the trace which the span is a part of."
                }
              }
            },
            {
              "name": "span_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The ID of the span to retrieve.",
                "examples": [
                  "41adbaf1091c6609"
                ],
                "title": "Span Id"
              },
              "description": "The ID of the span to retrieve.",
              "examples": {
                "trace_id": {
                  "value": "41adbaf1091c6609",
                  "summary": "The ID of the span to retrieve."
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Span"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "tracing",
          "x-fern-sdk-method-name": "span"
        }
      },
      "/v1/prompt": {
        "post": {
          "tags": [
            "v1",
            "prompt"
          ],
          "summary": "Create Prompt",
          "description": "Two types of prompts can be created - a root prompt or a child prompt (aka Prompt Version in the app).\n\n        A root prompt can be created by providing the `name` param, and it will always be tagged as production.\n\n        A child prompt can be created by providing the `parent_id` param. Note that the `name` param in this case will be ignored as all descendants from a root prompt would share the root's name. `is_prod` can also be provided to configure whether a child should be tagged as production.",
          "operationId": "create_prompt_v1_prompt_post",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PromptCreateParams"
                    }
                  ],
                  "description": "The parameters to create a new prompt.",
                  "title": "Prompt Params"
                },
                "examples": {
                  "example_root": {
                    "value": {
                      "name": "Prompt Name",
                      "description": "Description of the prompt",
                      "prompt_template": "\u003Csystem\u003E\nYou are a helpful assistant. Use the provided context to answer the user's query.\n\nContext: {context}\n\u003C/system\u003E\n\n\u003Cuser\u003E\n{user_query}\n\u003C/user\u003E",
                      "model_params": {
                        "param1": "value1",
                        "param2": 0.1,
                        "param3": 100,
                        "param4": true
                      },
                      "tag": "1.0",
                      "project_id": "1"
                    },
                    "summary": "Create a root prompt"
                  },
                  "example_child": {
                    "value": {
                      "parent_id": "7ac3cbd5-3b99-4e72-97f3-9cd2e749cace",
                      "description": "Description of the prompt",
                      "prompt_template": "\u003Csystem\u003E\nYou are a helpful assistant. Use the provided context to answer the user's query.\n\nContext: {context}\n\u003C/system\u003E\n\n\u003Cuser\u003E\n{user_query}\n\u003C/user\u003E",
                      "model_params": {
                        "param1": "value1",
                        "param2": 0.1,
                        "param3": 100,
                        "param4": true
                      },
                      "is_prod": true,
                      "tag": "v1.1",
                      "project_id": "1"
                    },
                    "summary": "Create a child prompt (aka Prompt Version)"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Prompt"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "prompt",
          "x-fern-sdk-method-name": "create"
        },
        "get": {
          "tags": [
            "v1",
            "prompt"
          ],
          "summary": "Get Prompt By Name",
          "description": "Retrieve a prompt by name, defaulting to the production prompt, unless a tag to select the prompt by is specified",
          "operationId": "get_prompt_by_name_v1_prompt_get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Name of the prompt.",
                "title": "Name"
              },
              "description": "Name of the prompt.",
              "examples": {
                "name": {
                  "value": "prompt_name",
                  "summary": "Get a prompt by name."
                }
              }
            },
            {
              "name": "tag",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "Tag to select by. Defaults to selecting the production version",
                "default": "production",
                "title": "Tag"
              },
              "description": "Tag to select by. Defaults to selecting the production version",
              "examples": {
                "tag": {
                  "value": "v1.1",
                  "summary": "Get a prompt tagged v1.1 with the specified name"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Prompt"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "prompt",
          "x-fern-sdk-method-name": "get_by_name"
        }
      },
      "/v1/prompt/list": {
        "get": {
          "tags": [
            "v1",
            "prompt"
          ],
          "summary": "List Prompts",
          "description": "List all prompts with cursor-based pagination",
          "operationId": "list_prompts_v1_prompt_list_get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "project_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "ID of Project to filter by.",
                "examples": [99],
                "title": "Project Id"
              },
              "description": "ID of Project to filter by."
            },
            {
              "name": "cursor",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Cursor for the next page",
                "title": "Cursor"
              },
              "description": "Cursor for the next page"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 0,
                "description": "Page size",
                "default": 50,
                "title": "Size"
              },
              "description": "Page size"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PromptCursorPage"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "prompt",
          "x-fern-sdk-method-name": "list_prompts"
        }
      },
      "/v1/prompt/{id}": {
        "get": {
          "tags": [
            "v1",
            "prompt"
          ],
          "summary": "Get Prompt By Id",
          "description": "Retrieve a prompt by id",
          "operationId": "get_prompt_by_id_v1_prompt__id__get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The id of the prompt to get.",
                "examples": [
                  "7ac3cbd5-3b99-4e72-97f3-9cd2e749cace"
                ],
                "title": "Id"
              },
              "description": "The id of the prompt to get.",
              "examples": {
                "id": {
                  "value": "7ac3cbd5-3b99-4e72-97f3-9cd2e749cace",
                  "summary": "Example prompt id."
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Prompt"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "prompt",
          "x-fern-sdk-method-name": "get"
        },
        "patch": {
          "tags": [
            "v1",
            "prompt"
          ],
          "summary": "Update Prompt",
          "description": "Update a prompt.\n\n        `is_prod` tags the provided prompt as the production prompt within the prompt graph.",
          "operationId": "update_prompt_v1_prompt__id__patch",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The id of the prompt to update.",
                "examples": [
                  "7ac3cbd5-3b99-4e72-97f3-9cd2e749cace"
                ],
                "title": "Id"
              },
              "description": "The id of the prompt to update.",
              "examples": {
                "id": {
                  "value": "7ac3cbd5-3b99-4e72-97f3-9cd2e749cace",
                  "summary": "Example prompt id."
                }
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PromptUpdateParams"
                    }
                  ],
                  "description": "The parameters to update a prompt.",
                  "title": "Update Params"
                },
                "examples": {
                  "example_update": {
                    "value": {
                      "is_prod": true
                    },
                    "summary": "Update the prompt version to prod."
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Prompt"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "prompt",
          "x-fern-sdk-method-name": "update"
        },
        "delete": {
          "tags": [
            "v1",
            "prompt"
          ],
          "summary": "Delete Root Prompt",
          "description": "Delete a root prompt and all of its children.",
          "operationId": "delete_root_prompt_v1_prompt__id__delete",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The id of the root prompt to delete.",
                "examples": [
                  "7ac3cbd5-3b99-4e72-97f3-9cd2e749cace"
                ],
                "title": "Id"
              },
              "description": "The id of the root prompt to delete.",
              "examples": {
                "id": {
                  "value": "7ac3cbd5-3b99-4e72-97f3-9cd2e749cace",
                  "summary": "Example root prompt id."
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "prompt",
          "x-fern-sdk-method-name": "delete"
        }
      },
      "/v1/scoring_config": {
        "post": {
          "tags": [
            "v1",
            "scoring_config"
          ],
          "summary": "Create Scoring Config",
          "description": "Create a new scoring config.",
          "operationId": "create_scoring_config_v1_scoring_config_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ScoringConfigCreateParams"
                    }
                  ],
                  "title": "Create Params",
                  "description": "The parameters to create a new scoring config."
                },
                "examples": {
                  "example": {
                    "summary": "Create a root scoring config",
                    "value": {
                      "name": "Scoring Config Name",
                      "description": "Description of the scoring config",
                      "metrics": [1, 2, 3],
                      "project_id": 1
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ScoringConfig"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "x-fern-sdk-group-name": "scoring_config",
          "x-fern-sdk-method-name": "create"
        }
      },
      "/v1/scoring_config/{id}": {
        "get": {
          "tags": [
            "v1",
            "scoring_config"
          ],
          "summary": "Get Scoring Config",
          "description": "Retrieve a scoring config by id",
          "operationId": "get_scoring_config_v1_scoring_config__id__get",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The id of the scoring config to get.",
                "examples": [
                  "123"
                ],
                "title": "Id"
              },
              "description": "The id of the scoring config to get.",
              "examples": {
                "id": {
                  "value": "123",
                  "summary": "Example scoring config id."
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ScoringConfig"
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "scoring_config",
          "x-fern-sdk-method-name": "get"
        },
        "delete": {
          "tags": [
            "v1",
            "scoring_config"
          ],
          "summary": "Delete Scoring Config",
          "description": "Delete a scoring config.",
          "operationId": "delete_scoring_config_v1_scoring_config__id__delete",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The id of the scoring config to delete.",
                "examples": [
                  "123"
                ],
                "title": "Id"
              },
              "description": "The id of the scoring config to delete.",
              "examples": {
                "id": {
                  "value": "123",
                  "summary": "Example scoring config id."
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthenticatedError"
                  }
                }
              },
              "description": "Unauthorized"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              },
              "description": "Not Found"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedError"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "x-fern-sdk-group-name": "scoring_config",
          "x-fern-sdk-method-name": "delete"
        }
      }
    },
    "components": {
      "schemas": {
        "CustomSchema-Input": {
          "properties": {
            "variables": {
              "items": {
                "$ref": "#/components/schemas/CustomVariable"
              },
              "type": "array",
              "title": "Variables",
              "description": "Ordered list of custom variables",
              "examples": [
                [
                  {
                    "data_type": "file_url",
                    "description": "example file url",
                    "name": "example_file_url",
                    "role": "input"
                  },
                  {
                    "data_type": "json_object",
                    "description": "example json object",
                    "name": "example_json_object",
                    "role": "output"
                  },
                  {
                    "data_type": "text",
                    "description": "example text",
                    "name": "example_text",
                    "role": "label"
                  }
                ]
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "CustomSchema",
          "description": "Custom schema model with an ordered list of custom variables."
        },
        "CustomSchema-Output": {
          "properties": {
            "variables": {
              "items": {
                "$ref": "#/components/schemas/CustomVariable"
              },
              "type": "array",
              "title": "Variables",
              "description": "Ordered list of custom variables",
              "examples": [
                [
                  {
                    "data_type": "file_url",
                    "description": "example file url",
                    "name": "example_file_url",
                    "role": "input"
                  },
                  {
                    "data_type": "json_object",
                    "description": "example json object",
                    "name": "example_json_object",
                    "role": "output"
                  },
                  {
                    "data_type": "text",
                    "description": "example text",
                    "name": "example_text",
                    "role": "label"
                  }
                ]
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "CustomSchema",
          "description": "Custom schema model with an ordered list of custom variables."
        },
        "CustomVariable": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "examples": [
                "variable_name"
              ]
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description",
              "examples": [
                "variable_description"
              ]
            },
            "role": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RoleEnum"
                }
              ],
              "examples": [
                "input",
                "output",
                "label",
                "metadata"
              ]
            },
            "data_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DataTypeEnum"
                }
              ],
              "examples": [
                "file_url",
                "json_object",
                "text"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "name",
            "role",
            "data_type"
          ],
          "title": "CustomVariable",
          "description": "Custom variable model with name, description, role and data type."
        },
        "DataTypeEnum": {
          "type": "string",
          "enum": [
            "text",
            "file_url",
            "json_object"
          ],
          "title": "DataTypeEnum",
          "description": "Enum for data types."
        },
        "FileUrl": {
          "properties": {
            "url": {
              "type": "string",
              "minLength": 1,
              "format": "uri",
              "title": "Url"
            },
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          "type": "object",
          "required": [
            "url"
          ],
          "title": "FileUrl",
          "description": "File model with url and name."
        },
        "Grade": {
          "properties": {
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id",
              "description": "The ID of the grade.",
              "examples": [1]
            },
            "run_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run Id",
              "description": "The ID of the run that created the grade.",
              "examples": [1]
            },
            "testcase_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Testcase Id",
              "description": "The ID of the testcase associated with the grade.",
              "examples": [1]
            },
            "testrecord_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Testrecord Id",
              "description": "The ID of the testrecord for which the grade was created.",
              "examples": [1]
            },
            "metric_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metric Id",
              "description": "The ID of the metric used to compute the grade.",
              "examples": [1]
            },
            "binary_score": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Binary Score",
              "description": "The binary score assigned to the grade.",
              "examples": [true, false]
            },
            "int_score": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Int Score",
              "description": "The integer score assigned to the grade.",
              "examples": [1]
            },
            "reasoning": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reasoning",
              "description": "The reasoning for the assigned score.",
              "examples": [
                "The moon is not made of cheese so this result is not factual."
              ]
            },
            "human_eval": {
              "type": "boolean",
              "title": "Human Eval",
              "description": "Indicates if a human should assign a grade.",
              "default": true,
              "examples": [true, false]
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScoreStatus"
                }
              ],
              "description": "The status of the grade.",
              "default": "pending",
              "examples": [
                "pending",
                "error",
                "completed"
              ]
            },
            "error_message": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error Message",
              "description": "The error message if the grade was not created successfully.",
              "examples": [
                "An error occurred while creating the grade."
              ]
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At",
              "description": "when the grade was created.",
              "examples": [
                "2025-02-06T23:05:50.132525"
              ]
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated At",
              "description": "when the grade was last updated.",
              "examples": [
                "2025-02-07T00:04:50.132584"
              ]
            }
          },
          "type": "object",
          "title": "Grade"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "IngestionMethod": {
          "type": "string",
          "enum": [
            "csv",
            "logging"
          ],
          "title": "IngestionMethod"
        },
        "JSONObject-Input": {
          "properties": {
            "value": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JSONObject-Input"
                  },
                  "type": "object"
                },
                {
                  "items": {
                    "$ref": "#/components/schemas/JSONObject-Input"
                  },
                  "type": "array"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "number"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "JSON Object Value",
              "description": "The value of the JSON object, which can be a dictionary, list, string, integer, float, boolean, or None.",
              "examples": [
                {
                  "booleanExample": true,
                  "dictExample": {
                    "nestedBooleanExample": true,
                    "nestedFloatExample": 12.34,
                    "nestedIntegerExample": 123,
                    "nestedListExample": [
                      "This is a string inside a nested list",
                      123, 12.34, true, null],
                    "nestedStringExample": "This is a string inside a nested dictionary"
                  },
                  "floatExample": 12.34,
                  "integerExample": 123,
                  "listExample": [
                    "This is a string inside a list",
                    123, 12.34, true, null, {
                      "nestedDictExample": "This is a nested dictionary inside a list"
                    }
                  ],
                  "stringExample": "This is a string"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "value"
          ],
          "title": "JSONObject"
        },
        "JSONObject-Output": {
          "properties": {
            "value": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JSONObject-Output"
                  },
                  "type": "object"
                },
                {
                  "items": {
                    "$ref": "#/components/schemas/JSONObject-Output"
                  },
                  "type": "array"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "number"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "JSON Object Value",
              "description": "The value of the JSON object, which can be a dictionary, list, string, integer, float, boolean, or None.",
              "examples": [
                {
                  "booleanExample": true,
                  "dictExample": {
                    "nestedBooleanExample": true,
                    "nestedFloatExample": 12.34,
                    "nestedIntegerExample": 123,
                    "nestedListExample": [
                      "This is a string inside a nested list",
                      123, 12.34, true, null],
                    "nestedStringExample": "This is a string inside a nested dictionary"
                  },
                  "floatExample": 12.34,
                  "integerExample": 123,
                  "listExample": [
                    "This is a string inside a list",
                    123, 12.34, true, null, {
                      "nestedDictExample": "This is a nested dictionary inside a list"
                    }
                  ],
                  "stringExample": "This is a string"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "value"
          ],
          "title": "JSONObject"
        },
        "NotFoundError": {
          "properties": {
            "error": {
              "type": "string",
              "title": "Error",
              "default": "not found"
            },
            "error_description": {
              "type": "string",
              "title": "Error Description",
              "default": "The requested resource was not found"
            },
            "status_code": {
              "type": "integer",
              "title": "Status Code",
              "default": 400
            }
          },
          "type": "object",
          "title": "NotFoundError"
        },
        "PaginatedTestcaseResponse": {
          "properties": {
            "count": {
              "type": "integer",
              "title": "Count",
              "examples": [1000]
            },
            "next": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Next",
              "description": "The URL to fetch the next page of testcases.",
              "examples": [
                "https://api.getscorecard.ai/v1/testset/100/testcase?offset=200&limit=100"
              ]
            },
            "previous": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Previous",
              "description": "The URL to fetch the previous page of testcases.",
              "examples": [
                "https://api.getscorecard.ai/v1/testset/100/testcase?offset=0&limit=100"
              ]
            },
            "results": {
              "items": {
                "$ref": "#/components/schemas/TestCase"
              },
              "type": "array",
              "title": "Results",
              "description": "The list of Testcases retrieved in this page."
            }
          },
          "type": "object",
          "required": [
            "count",
            "next",
            "previous",
            "results"
          ],
          "title": "PaginatedTestcaseResponse"
        },
        "Prompt": {
          "properties": {
            "org_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Id",
              "description": "The organization this resource belongs to."
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id",
              "description": "The user this record belongs to."
            },
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "is_archived": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Archived",
              "default": false
            },
            "prompt_template": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt Template"
            },
            "model_params": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Params"
            },
            "root_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Root Id"
            },
            "parent_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Id"
            },
            "merge_parent_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Merge Parent Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            },
            "project_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id",
              "description": "The ID of the project the prompt belongs to.",
              "examples": [1]
            }
          },
          "type": "object",
          "title": "Prompt"
        },
        "PromptCreateParams": {
          "properties": {
            "prompt_template": {
              "type": "string",
              "title": "Prompt Template"
            },
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "parent_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Id"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "model_params": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Params"
            },
            "tag": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag"
            },
            "is_prod": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Prod",
              "default": false
            },
            "project_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "prompt_template"
          ],
          "title": "PromptCreateParams"
        },
        "PromptCursorPage": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/Prompt"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total",
              "description": "Total items"
            },
            "current_page": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Current Page",
              "description": "Cursor to refetch the current page"
            },
            "current_page_backwards": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Current Page Backwards",
              "description": "Cursor to refetch the current page starting from the last item"
            },
            "previous_page": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Previous Page",
              "description": "Cursor for the previous page"
            },
            "next_page": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Next Page",
              "description": "Cursor for the next page"
            }
          },
          "type": "object",
          "required": [
            "items"
          ],
          "title": "PromptCursorPage"
        },
        "PromptUpdateParams": {
          "properties": {
            "is_prod": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Prod",
              "default": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "PromptUpdateParams"
        },
        "RoleEnum": {
          "type": "string",
          "enum": [
            "input",
            "output",
            "label",
            "metadata"
          ],
          "title": "RoleEnum",
          "description": "Enum for role types."
        },
        "Run": {
          "properties": {
            "id": {
              "type": "integer",
              "title": "Id",
              "examples": [1]
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At",
              "description": "The creation date and time of the run.",
              "examples": [
                "2025-02-06T00:05:49.935385"
              ]
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated At",
              "description": "The last time the run was updated.",
              "examples": [
                "2025-02-06T23:05:49.935508"
              ]
            },
            "execution_start_time": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Execution Start Time",
              "description": "The start time of the run.",
              "examples": [
                "2025-02-06T23:35:49.935554"
              ]
            },
            "execution_end_time": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Execution End Time",
              "description": "The end time of the run.",
              "examples": [
                "2025-02-06T23:55:49.935596"
              ]
            },
            "testset_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Testset Id",
              "description": "The testset that was executed in this run.",
              "examples": [1]
            },
            "status": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status",
              "description": "The current status of the run.",
              "examples": [
                "completed",
                "awaiting_human_scoring",
                "awaiting_scoring",
                "awaiting_execution",
                "running_execution",
                "running_scoring",
                "pending"
              ]
            },
            "limit_testcases": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit Testcases",
              "description": "The maximum number of testcases to run.",
              "examples": [10]
            },
            "source": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source",
              "description": "How the run was created.",
              "examples": [
                "api",
                "playground"
              ]
            },
            "model_params": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Params",
              "description": "The model parameters used when generating the run.",
              "examples": [
                {
                  "isCustom": false,
                  "maxTokens": 2048,
                  "modelName": "gpt-4-1106-preview",
                  "temperature": 0,
                  "topP": 0.9
                }
              ]
            },
            "notes": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notes",
              "description": "Notes about the run.",
              "examples": [
                "This is a test run"
              ]
            },
            "scoring_config_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scoring Config Id",
              "description": "The ID of the scoring configuration the run uses.",
              "examples": [3345]
            },
            "prompt_template": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt Template",
              "description": "The prompt template to be used while executing the run.",
              "examples": [
                "You are a helpful assistant"
              ]
            },
            "scoring_start_time": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scoring Start Time",
              "description": "The start time of scoring the run's results.",
              "examples": [
                "2025-02-07T00:00:49.935969"
              ]
            },
            "scoring_end_time": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scoring End Time",
              "description": "The end time of scoring the run's results.",
              "examples": [
                "2025-02-07T00:04:49.936045"
              ]
            },
            "prompt_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt Id"
            }
          },
          "type": "object",
          "title": "Run"
        },
        "RunCreateParams": {
          "properties": {
            "testset_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Optional. The ID of the testset this run is associated with.",
              "examples": [1]
            },
            "scoring_config_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Optional. The ID of the scoring configuration to use for this run.",
              "examples": [3345]
            },
            "status": {
              "type": "string",
              "title": "The current status of the run.",
              "default": "awaiting_execution",
              "examples": [
                "pending",
                "awaiting_execution",
                "running_execution",
                "awaiting_scoring",
                "running_scoring",
                "awaiting_human_scoring",
                "completed"
              ]
            },
            "model_params": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Params",
              "description": "Optional. The model parameters to use for this run.",
              "examples": [
                {
                  "isCustom": false,
                  "maxTokens": 2048,
                  "modelName": "gpt-4-1106-preview",
                  "temperature": 0,
                  "topP": 0.9
                }
              ]
            },
            "source": {
              "type": "string",
              "title": "Source",
              "default": "api",
              "examples": [
                "api",
                "playground"
              ]
            },
            "notes": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notes",
              "examples": [
                "This is a test run"
              ]
            },
            "prompt_template": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt Template",
              "examples": [
                "You are a helpful assistant"
              ]
            },
            "metrics": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metrics",
              "examples": [
                [1, 2, 3]
              ]
            },
            "prompt_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt Id",
              "examples": [
                "0003ffd4-6d39-4d34-92c1-9cc9c62bbcfd"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "RunCreateParams"
        },
        "RunMetric": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "run_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run Id"
            },
            "metric_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metric Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            }
          },
          "type": "object",
          "title": "RunMetric"
        },
        "RunStatus": {
          "type": "string",
          "enum": [
            "pending",
            "awaiting_execution",
            "running_execution",
            "awaiting_scoring",
            "running_scoring",
            "awaiting_human_scoring",
            "completed"
          ],
          "title": "RunStatus"
        },
        "ScoreCreateParams": {
          "properties": {
            "metric_id": {
              "type": "integer",
              "title": "Metric Id",
              "description": "The ID of the metric",
              "examples": [1]
            },
            "int_score": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Int Score",
              "description": "Specify integer scores.",
              "examples": [10]
            },
            "binary_score": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Binary Score",
              "description": "Specify boolean scores.",
              "examples": [true, false]
            },
            "reasoning": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reasoning",
              "description": "The reasoning for the assigned score.",
              "examples": [
                "The moon is made of cheese."
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "metric_id",
            "int_score",
            "binary_score",
            "reasoning"
          ],
          "title": "ScoreCreateParams"
        },
        "ScoreStatus": {
          "type": "string",
          "enum": [
            "pending",
            "error",
            "completed"
          ],
          "title": "ScoreStatus"
        },
        "ScoreUpdateParams": {
          "properties": {
            "int_score": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Int Score",
              "description": "The new integer score to assign.",
              "examples": [1]
            },
            "binary_score": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Binary Score",
              "description": "The new boolean score to assign.",
              "examples": [false, true]
            },
            "reasoning": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reasoning",
              "description": "The reasoning for the score update.",
              "examples": [
                "Turns out the moon insn't acutally made of cheese."
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "int_score",
            "binary_score",
            "reasoning"
          ],
          "title": "ScoreUpdateParams"
        },
        "ScoringConfig": {
          "properties": {
            "org_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Id",
              "description": "The organization this resource belongs to."
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id",
              "description": "The user this record belongs to."
            },
            "id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "config": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config"
            },
            "is_archived": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Archived",
              "default": false
            },
            "metrics": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metrics"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            },
            "project_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id",
              "description": "The ID of the project the scoring config belongs to.",
              "examples": [1]
            }
          },
          "type": "object",
          "title": "ScoringConfig"
        },
        "ScoringConfigCreateParams": {
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name",
              "examples": [
                "Scoring Config Name"
              ]
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description",
              "examples": [
                "This scoring config contains a set of metrics measuring the correctness of the model"
              ]
            },
            "metrics": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metrics",
              "examples": [
                [1, 2, 3]
              ]
            },
            "project_id": {
              "type": "integer",
              "title": "Project Id",
              "examples": [1]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "ScoringConfigCreateParams"
        },
        "Span": {
          "properties": {
            "Children": {
              "items": {
                "$ref": "#/components/schemas/Span"
              },
              "type": "array",
              "title": "Children"
            },
            "Timestamp": {
              "type": "string",
              "format": "date-time",
              "title": "Timestamp"
            },
            "TraceId": {
              "type": "string",
              "title": "Traceid"
            },
            "SpanId": {
              "type": "string",
              "title": "Spanid"
            },
            "ParentSpanId": {
              "type": "string",
              "title": "Parentspanid"
            },
            "TraceState": {
              "type": "string",
              "title": "Tracestate"
            },
            "SpanName": {
              "type": "string",
              "title": "Spanname"
            },
            "SpanKind": {
              "type": "string",
              "title": "Spankind"
            },
            "ServiceName": {
              "type": "string",
              "title": "Servicename"
            },
            "ResourceAttributes": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "title": "Resourceattributes"
            },
            "ScopeName": {
              "type": "string",
              "title": "Scopename"
            },
            "ScopeVersion": {
              "type": "string",
              "title": "Scopeversion"
            },
            "SpanAttributes": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "title": "Spanattributes"
            },
            "Duration": {
              "type": "integer",
              "title": "Duration"
            },
            "StatusCode": {
              "type": "string",
              "title": "Statuscode"
            },
            "StatusMessage": {
              "type": "string",
              "title": "Statusmessage"
            },
            "Events.Timestamp": {
              "items": {
                "type": "string",
                "format": "date-time"
              },
              "type": "array",
              "title": "Events.Timestamp"
            },
            "Events.Name": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Events.Name"
            },
            "Events.Attributes": {
              "items": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "type": "array",
              "title": "Events.Attributes"
            },
            "Links.TraceId": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Links.Traceid"
            },
            "Links.SpanId": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Links.Spanid"
            },
            "Links.TraceState": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Links.Tracestate"
            },
            "Links.Attributes": {
              "items": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "type": "array",
              "title": "Links.Attributes"
            }
          },
          "type": "object",
          "required": [
            "Children",
            "Timestamp",
            "TraceId",
            "SpanId",
            "ParentSpanId",
            "TraceState",
            "SpanName",
            "SpanKind",
            "ServiceName",
            "ResourceAttributes",
            "ScopeName",
            "ScopeVersion",
            "SpanAttributes",
            "Duration",
            "StatusCode",
            "StatusMessage",
            "Events.Timestamp",
            "Events.Name",
            "Events.Attributes",
            "Links.TraceId",
            "Links.SpanId",
            "Links.TraceState",
            "Links.Attributes"
          ],
          "title": "Span"
        },
        "TestCase": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id",
              "description": "The ID of the testcase.",
              "examples": [100]
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At",
              "description": "The creation date and time of the testcase.",
              "examples": [
                "2025-02-07T00:05:50.184396"
              ]
            },
            "testset_id": {
              "type": "integer",
              "title": "Testset Id",
              "description": "The ID of the testset the testcase belongs to.",
              "examples": [123]
            },
            "user_query": {
              "type": "string",
              "title": "User Query",
              "description": "The user query for the testcase.",
              "examples": [
                "What is the moon made of?"
              ]
            },
            "context": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Context",
              "description": "The context for the testcase.",
              "examples": [
                "After the Apollo missions, we know the moon is made of cheese."
              ]
            },
            "ideal": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ideal",
              "description": "The ideal response for the testcase.",
              "examples": [
                "The moon is made of rock."
              ]
            },
            "custom_inputs": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Output"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Inputs"
            },
            "custom_labels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Output"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Labels"
            }
          },
          "type": "object",
          "required": [
            "testset_id",
            "user_query"
          ],
          "title": "TestCase"
        },
        "TestcaseBatchCopyParams": {
          "properties": {
            "ids": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Ids",
              "description": "List of Testcase IDs to copy.",
              "default": [],
              "examples": [
                [1, 2, 3, 4]
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "TestcaseBatchCopyParams"
        },
        "TestcaseBatchDeleteParams": {
          "properties": {
            "ids": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Ids",
              "description": "List of Testcase IDs to delete.",
              "default": [],
              "examples": [
                [1, 2, 3, 4]
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "TestcaseBatchDeleteParams"
        },
        "TestcaseBatchDeletionResponse": {
          "properties": {
            "ids": {
              "items": {
                "type": "integer"
              },
              "type": "array",
              "title": "Ids",
              "description": "The IDs of the testcases that were deleted.",
              "examples": [
                [1, 2, 3]
              ]
            },
            "detail": {
              "type": "string",
              "title": "Detail",
              "description": "The message indicating the testcases were deleted.",
              "readOnly": true,
              "examples": [
                "Testcases 1, 2, 3 deleted successfully."
              ]
            }
          },
          "type": "object",
          "required": [
            "ids",
            "detail"
          ],
          "title": "TestcaseBatchDeletionResponse"
        },
        "TestcaseCreateParams": {
          "properties": {
            "user_query": {
              "type": "string",
              "title": "User Query",
              "description": "The user query to be executed.",
              "examples": [
                "What is the moon made of?"
              ]
            },
            "context": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Context",
              "description": "The context to be used while generating the testcase.",
              "examples": [
                "After the Apollo missions, we know the moon is made of cheese."
              ]
            },
            "ideal": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ideal",
              "description": "The ideal response to the user query.",
              "examples": [
                "The moon is made of rock."
              ]
            },
            "custom_inputs": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Input"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Inputs"
            },
            "custom_labels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Input"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Labels"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "TestcaseCreateParams"
        },
        "TestcaseDeletionResponse": {
          "properties": {
            "id": {
              "type": "integer",
              "title": "Id",
              "description": "The ID of the testcase that was deleted.",
              "examples": [1]
            },
            "detail": {
              "type": "string",
              "title": "Detail",
              "description": "The message indicating the testcase was deleted.",
              "readOnly": true,
              "examples": [
                "Testcase 1 deleted successfully."
              ]
            }
          },
          "type": "object",
          "required": [
            "id",
            "detail"
          ],
          "title": "TestcaseDeletionResponse"
        },
        "TestcaseUpdateParams": {
          "properties": {
            "user_query": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Query",
              "description": "The user query to be executed.",
              "examples": [
                "What is the moon made of?"
              ]
            },
            "context": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Context",
              "description": "The context to be used while generating the testcase.",
              "examples": [
                "After the Apollo missions, we know the moon is made of cheese."
              ]
            },
            "ideal": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ideal",
              "description": "The ideal response to the user query.",
              "examples": [
                "The moon is made of rock."
              ]
            },
            "custom_inputs": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Input"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Inputs",
              "examples": [
                {
                  "additionalProp1": "Here is some example text",
                  "additionalProp2": "Here is some example text",
                  "additionalProp3": "Here is some example text"
                }
              ]
            },
            "custom_labels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Input"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Labels",
              "examples": [
                {
                  "additionalProp1": "Here is some example text",
                  "additionalProp2": "Here is some example text",
                  "additionalProp3": "Here is some example text"
                }
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "TestcaseUpdateParams"
        },
        "Testrecord": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id",
              "examples": [15]
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At",
              "description": "The creation date and time of the testrecord.",
              "examples": [
                "2025-02-06T00:05:50.146678"
              ]
            },
            "run_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run Id",
              "description": "The ID of the run the testrecord belongs to.",
              "examples": [334]
            },
            "testset_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Testset Id",
              "description": "The ID of the testset the testrecord belongs to.",
              "examples": [13]
            },
            "testcase_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Testcase Id",
              "description": "The ID of the testcase the testrecord belongs to.",
              "examples": [124]
            },
            "user_query": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Query",
              "description": "The user query for the testrecord.",
              "examples": [
                "What is the moon made of?"
              ]
            },
            "context": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Context",
              "description": "The context for the testrecord.",
              "examples": [
                "After the Apollo missions, we know the moon is made of cheese."
              ]
            },
            "model_response": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Response",
              "description": "The actual response of the model for the testrecord.",
              "examples": [
                "The moon is made of cheese."
              ]
            },
            "ideal": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ideal",
              "description": "The ideal response for the testrecord.",
              "examples": [
                "The moon is made of rock."
              ]
            },
            "custom_inputs": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Output"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Inputs"
            },
            "custom_labels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Output"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Labels"
            },
            "custom_outputs": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Output"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Outputs"
            },
            "status": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status",
              "description": "The current status of the testrecord.",
              "examples": [
                "awaiting_scoring",
                "awaiting_human_scoring",
                "error",
                "completed"
              ]
            },
            "prompt": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt",
              "description": "The prompt used to generate the testrecord.",
              "examples": [
                "You are a helpful assistant. Use the provided context to answer the user query."
              ]
            },
            "model_params": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Params",
              "description": "The model parameters used when generating the testrecord.",
              "examples": [
                {
                  "isCustom": false,
                  "maxTokens": 2048,
                  "modelName": "gpt-4-1106-preview",
                  "temperature": 0,
                  "topP": 0.9
                }
              ]
            },
            "model_debug_info": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Debug Info",
              "description": "Debug information produced during the testrecord's generation.",
              "examples": [
                {
                  "completion_token_count": 92,
                  "latency_seconds": 3.23607873916626,
                  "prompt_token_count": 28,
                  "total_cost": 0.00304,
                  "total_token_count": 120
                }
              ]
            },
            "error_message": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error Message",
              "description": "The error message for the testrecord.",
              "examples": [
                "Error generating a model response."
              ]
            }
          },
          "type": "object",
          "title": "Testrecord"
        },
        "TestrecordCreateParams": {
          "properties": {
            "testset_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Testset Id",
              "examples": [13, null]
            },
            "testcase_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Testcase Id",
              "examples": [124, null]
            },
            "user_query": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Query",
              "description": "The user query that was executed for the testrecord.",
              "examples": [
                "What is the moon made of?"
              ]
            },
            "context": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Context",
              "description": "The context that was used while generating the testrecord.",
              "examples": [
                "After the Apollo missions, we know the moon is made of cheese."
              ]
            },
            "response": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Response",
              "description": "The response generated by the model.",
              "examples": [
                "The moon is made of cheese."
              ]
            },
            "ideal": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ideal",
              "description": "The ideal response.",
              "examples": [
                "The moon is made of rock."
              ]
            },
            "custom_inputs": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Input"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Inputs"
            },
            "custom_outputs": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Input"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Outputs"
            },
            "custom_labels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string",
                        "examples": [
                          "Here is some example text"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/FileUrl"
                          }
                        ],
                        "examples": [
                          "https://example.com/file.txt"
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/JSONObject-Input"
                          }
                        ],
                        "examples": [
                          {
                            "example_boolean_key": true,
                            "example_dict_key": {
                              "example_dict_key": "example_dict_value"
                            },
                            "example_list_key": [
                              "example_list_value"
                            ],
                            "example_number_key": 123,
                            "example_string_key": "example_string_value"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Labels"
            },
            "prompt": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt",
              "description": "The prompt used to generate the response.",
              "examples": [
                "You are a helpful assistant. Use the provided context to answer the user query."
              ]
            },
            "model_params": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Params",
              "description": "The model parameters used to generate the response.",
              "examples": [
                {
                  "isCustom": false,
                  "maxTokens": 2048,
                  "modelName": "gpt-4-1106-preview",
                  "temperature": 0,
                  "topP": 0.9
                }
              ]
            },
            "model_debug_info": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Debug Info",
              "description": "Debug information generated by Scorecard during the execution of the testrecord.",
              "examples": [
                {
                  "completion_token_count": 92,
                  "latency_seconds": 3.23607873916626,
                  "prompt_token_count": 28,
                  "total_cost": 0.00304,
                  "total_token_count": 120
                }
              ]
            },
            "error_message": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error Message",
              "description": "The error message for the testrecord.",
              "examples": [
                "Error generating a model response."
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "TestrecordCreateParams"
        },
        "Testset": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id",
              "description": "The ID of the testset.",
              "examples": [1]
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At",
              "description": "The creation date and time of the testset.",
              "examples": [
                "2025-02-06T00:05:50.224015"
              ]
            },
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name",
              "description": "A human-readable name for the testset. This will be displayed in the UI.",
              "examples": [
                "Example Testset"
              ]
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description",
              "description": "A description for the testset.",
              "examples": [
                "A testset to finally confirm if the moon is made of cheese."
              ]
            },
            "using_retrieval": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Using Retrieval",
              "description": "Whether or not the testset uses retrieval.",
              "examples": [true, false]
            },
            "ingestion_method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ingestion Method",
              "description": "The method used to ingest the testset.",
              "examples": [
                "manual",
                "api"
              ]
            },
            "num_testcases": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Num Testcases",
              "description": "The number of testcases in the testset.",
              "default": 0,
              "examples": [10]
            },
            "published": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Published",
              "description": "Whether or not the testset is published.",
              "examples": [true, false]
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated At",
              "description": "The last time the testset was updated.",
              "examples": [
                "2025-02-07T00:05:50.224392"
              ]
            },
            "is_archived": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Archived",
              "description": "Whether or not the testset is archived.",
              "default": false,
              "examples": [true, false]
            },
            "project_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id",
              "description": "The ID of the project the testset belongs to.",
              "examples": [1]
            },
            "custom_schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CustomSchema-Output"
                },
                {
                  "type": "null"
                }
              ]
            },
            "created_by_playground": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created By Playground",
              "description": "Whether or not the testset was created by the playground.",
              "default": false,
              "examples": [true, false]
            }
          },
          "type": "object",
          "title": "Testset"
        },
        "TestsetCreateParams": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "examples": [
                "Example Testset"
              ]
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description",
              "description": "A description for the testset.",
              "examples": [
                "A testset to finally confirm if the moon is made of cheese."
              ]
            },
            "using_retrieval": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Using Retrieval",
              "description": "Whether or not the testset uses retrieval.",
              "examples": [true, false]
            },
            "custom_schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CustomSchema-Input"
                },
                {
                  "type": "null"
                }
              ],
              "default": {
                "variables": []
              },
              "examples": [
                {
                  "variables": [
                    {
                      "data_type": "file_url",
                      "description": "example file url",
                      "name": "example_file_url",
                      "role": "input"
                    },
                    {
                      "data_type": "json_object",
                      "description": "example json object",
                      "name": "example_json_object",
                      "role": "output"
                    },
                    {
                      "data_type": "text",
                      "description": "example text",
                      "name": "example_text",
                      "role": "label"
                    }
                  ]
                }
              ]
            },
            "project_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id",
              "description": "The ID of the project to create the testset in. Omitting this optional argument will create the testset inside your Organization's default project.",
              "examples": [123]
            },
            "ingestion_method": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IngestionMethod"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The method of ingestion for the testset.",
              "default": "logging",
              "examples": [
                "csv",
                "logging"
              ]
            },
            "published": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Published",
              "description": "Whether or not the testset is published.",
              "default": false,
              "examples": [true, false]
            },
            "created_by_playground": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created By Playground",
              "description": "Whether or not the testset was created by the playground.",
              "default": false,
              "examples": [true, false]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "name"
          ],
          "title": "TestsetCreateParams"
        },
        "TestsetCursorPage": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/Testset"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total",
              "description": "Total items"
            },
            "current_page": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Current Page",
              "description": "Cursor to refetch the current page"
            },
            "current_page_backwards": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Current Page Backwards",
              "description": "Cursor to refetch the current page starting from the last item"
            },
            "previous_page": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Previous Page",
              "description": "Cursor for the previous page"
            },
            "next_page": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Next Page",
              "description": "Cursor for the next page"
            }
          },
          "type": "object",
          "required": [
            "items"
          ],
          "title": "TestsetCursorPage"
        },
        "TestsetUpdateParams": {
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name",
              "examples": [
                "Example Testset"
              ]
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description",
              "description": "A description for the testset.",
              "examples": [
                "A testset to finally confirm if the moon is made of cheese."
              ]
            },
            "using_retrieval": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Using Retrieval",
              "description": "Whether or not the testset uses retrieval.",
              "examples": [true, false]
            },
            "custom_schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CustomSchema-Input"
                },
                {
                  "type": "null"
                }
              ],
              "default": {
                "variables": []
              },
              "examples": [
                {
                  "variables": [
                    {
                      "data_type": "file_url",
                      "description": "example file url",
                      "name": "example_file_url",
                      "role": "input"
                    },
                    {
                      "data_type": "json_object",
                      "description": "example json object",
                      "name": "example_json_object",
                      "role": "output"
                    },
                    {
                      "data_type": "text",
                      "description": "example text",
                      "name": "example_text",
                      "role": "label"
                    }
                  ]
                }
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "TestsetUpdateParams"
        },
        "Trace": {
          "properties": {
            "TraceId": {
              "type": "string",
              "title": "Traceid"
            },
            "Start": {
              "type": "string",
              "format": "date-time",
              "title": "Start"
            },
            "End": {
              "type": "string",
              "format": "date-time",
              "title": "End"
            },
            "Spans": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/Span"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spans"
            }
          },
          "type": "object",
          "required": [
            "TraceId",
            "Start",
            "End"
          ],
          "title": "Trace"
        },
        "UnauthenticatedError": {
          "properties": {
            "error": {
              "type": "string",
              "title": "Error",
              "default": "unauthenticated"
            },
            "error_description": {
              "type": "string",
              "title": "Error Description",
              "default": "The request is not authenticated"
            },
            "status_code": {
              "type": "integer",
              "title": "Status Code",
              "default": 400
            }
          },
          "type": "object",
          "title": "UnauthenticatedError"
        },
        "UnauthorizedError": {
          "properties": {
            "error": {
              "type": "string",
              "title": "Error",
              "default": "unauthorized"
            },
            "error_description": {
              "type": "string",
              "title": "Error Description",
              "default": "The user is not authorized to view the requsted resource"
            },
            "status_code": {
              "type": "integer",
              "title": "Status Code",
              "default": 400
            }
          },
          "type": "object",
          "title": "UnauthorizedError"
        },
        "UpdateStatusParams": {
          "properties": {
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RunStatus"
                }
              ],
              "default": "awaiting_execution",
              "examples": [
                "pending",
                "awaiting_execution",
                "running_execution",
                "awaiting_scoring",
                "running_scoring",
                "awaiting_human_scoring",
                "completed"
              ]
            }
          },
          "type": "object",
          "title": "UpdateStatusParams"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        }
      },
      "securitySchemes": {
        "APIKeyHeader": {
          "type": "apiKey",
          "in": "header",
          "name": "X-API-Key"
        }
      }
    },
    "servers": [
      {
        "url": "https://api.getscorecard.ai",
        "description": "Production server"
      },
      {
        "url": "http://localhost:8000",
        "description": "Local development server"
      },
      {
        "url": "https://api.scorecard.io",
        "description": "Current Host"
      }
    ]
  }